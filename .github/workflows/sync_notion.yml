name: Sync GitHub Issues to Notion (IOS)

on:
  issues:
    types: [opened, closed]
  pull_request:
    types: [opened]

jobs:
  sync_issue:
    if: github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Convert Issue Body to JSON
        run: echo '${{ github.event.issue.body }}' | jq -Rs '.' > issue_body.json

      - name: Send Issue to Notion
        run: |
          ISSUE_BODY=$(cat issue_body.json)

          jq -n \
          --arg database_id "${{ secrets.NOTION_DATABASE_ID }}" \
          --arg title "${{ github.event.issue.title }}" \
          --arg url "${{ github.event.issue.html_url }}" \
          --arg status "작업 중" \
          --arg team "IOS" \
          --arg assignee "${{ github.event.issue.user.login }}" \
          --arg issue_number "${{ github.event.issue.number }}" \
          '{
            parent: { database_id: $database_id },
            properties: {
              "제목": { title: [{ text: { content: $title } }] },
              "URL": { url: $url },
              "상태": { status: { name: $status } },
              "팀": { select: { name: $team } },
              "담당자": { rich_text: [{ type: "text", text: { content: $assignee } }] },
              "이슈 번호": { number: ($issue_number | tonumber) }
            }
          }' | curl -X POST "https://api.notion.com/v1/pages" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data @-

  update_issue:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Find Notion Page for the Issue
        run: |
          QUERY_RESULT=$(curl -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "filter": {
              "property": "이슈 번호",
              "number": {
                "equals": ${{ github.event.issue.number }}
              }
            }
          }')

          page_id=$(echo "$QUERY_RESULT" | jq -r '.results[0].id')

          if [[ "$page_id" != "null" && "$page_id" != "" ]]; then
            echo "✅ Notion Page ID 찾음: $page_id"
            echo "PAGE_ID=$page_id" >> $GITHUB_ENV
          else
            echo "❌ Notion 페이지를 찾을 수 없습니다."
            exit 1
          fi

      - name: Update Notion Page Status to "완료"
        run: |
          curl -X PATCH "https://api.notion.com/v1/pages/${{ env.PAGE_ID }}" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "properties": {
              "상태": { "status": { "name": "완료" } }
            }
          }'

  update_issue_status_for_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Extract Issue Number for PRs
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"

          # ✅ Markdown 링크에서 "#숫자" 패턴을 찾아 숫자만 추출
          ISSUE_NUMBER=$(echo "$PR_BODY" | grep -oE '#[0-9]+' | sed 's/#//g' | tail -n 1)

          if [[ -z "$ISSUE_NUMBER" ]]; then
            echo "⚠ PR에 연결된 Issue를 찾지 못했습니다. (Issue 연동이 없을 수도 있음)"
            exit 0  # 강제 종료하지 않고 경고만 출력
          else
            echo "🔍 PR과 연결된 Issue 번호: $ISSUE_NUMBER"
            echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV
          fi

      - name: Find Notion Page for the Issue
        run: |
          echo "🔍 Searching for Notion Page with Issue Number: $ISSUE_NUMBER"

          QUERY_RESULT=$(curl -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "filter": {
              "property": "이슈 번호",
              "number": {
                "equals": '"$ISSUE_NUMBER"'
              }
            }
          }')

          page_id=$(echo "$QUERY_RESULT" | jq -r '.results[0].id')

          if [[ "$page_id" != "null" && "$page_id" != "" ]]; then
            echo "✅ Notion Page ID 찾음: $page_id"
            echo "PAGE_ID=$page_id" >> $GITHUB_ENV
          else
            echo "❌ Notion 페이지를 찾을 수 없습니다."
            exit 1
          fi

      - name: Update Notion Page Status to "리뷰 대기"
        run: |
          curl -X PATCH "https://api.notion.com/v1/pages/${{ env.PAGE_ID }}" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "properties": {
              "상태": { "status": { "name": "리뷰 대기" } }
            }
          }'
